-- MySQL Script generated by MySQL Workbench
-- Fri Nov 15 22:48:21 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema db_computer_store
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS db_computer_store DEFAULT CHARACTER SET utf8 ;
USE db_computer_store ;

-- -----------------------------------------------------
-- Table db_computer_store.Jobs
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS db_computer_store.Jobs (
  job_id INT NOT NULL,
  job_title VARCHAR(50) NOT NULL,
  PRIMARY KEY (job_id)
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table db_computer_store.Departments
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS db_computer_store.Departments (
  department_id INT NOT NULL,
  department_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (department_id)
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table db_computer_store.Employees
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS db_computer_store.Employees (
  employee_id BIGINT NOT NULL,
  employee_firstname VARCHAR(50) NOT NULL,
  employee_lastname VARCHAR(50) NOT NULL,
  branch_id INT NOT NULL,
  job_id INT NOT NULL,
  hire_date DATE NOT NULL,
  department_id INT NOT NULL,
  PRIMARY KEY (employee_id),
  INDEX branch_id_idx (branch_id ASC) VISIBLE,
  INDEX job_id_idx (job_id ASC) VISIBLE,
  INDEX department_id_idx (department_id ASC) VISIBLE,
  CONSTRAINT employee_branch_id
    FOREIGN KEY (branch_id)
    REFERENCES db_computer_store.Branches (branch_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT job_id
    FOREIGN KEY (job_id)
    REFERENCES db_computer_store.Jobs (job_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT department_id
    FOREIGN KEY (department_id)
    REFERENCES db_computer_store.Departments (department_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table db_computer_store.Branches
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS db_computer_store.Branches (
  branch_id INT NOT NULL,
  branch_name VARCHAR(50) NOT NULL,
  location VARCHAR(250) NOT NULL,
  contact_number BIGINT NULL,
  manager_id BIGINT NOT NULL,
  PRIMARY KEY (branch_id),
  INDEX manager_id_idx (manager_id ASC) VISIBLE,
  CONSTRAINT manager_id
    FOREIGN KEY (manager_id)
    REFERENCES db_computer_store.Employees (employee_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table db_computer_store.EmployeeTransfers
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS db_computer_store.EmployeeTransfers (
  emp_transfer_id INT NOT NULL,
  employee_id BIGINT NOT NULL,
  new_branch_id INT NOT NULL,
  effective_date DATE NOT NULL,
  new_department_id INT NOT NULL,
  new_job_id INT NOT NULL,
  reason TEXT NOT NULL,
  PRIMARY KEY (emp_transfer_id),
  INDEX employee_id_idx (employee_id ASC) VISIBLE,
  INDEX new_branch_id_idx (new_branch_id ASC) VISIBLE,
  INDEX new_job_id_idx (new_job_id ASC) VISIBLE,
  INDEX new_departmentID_idx (new_department_id ASC) VISIBLE,
  CONSTRAINT employee_id
    FOREIGN KEY (employee_id)
    REFERENCES db_computer_store.Employees (employee_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT new_branch_id
    FOREIGN KEY (new_branch_id)
    REFERENCES db_computer_store.Branches (branch_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT new_departmentID
    FOREIGN KEY (new_department_id)
    REFERENCES db_computer_store.Departments (department_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT new_job_id
    FOREIGN KEY (new_job_id)
    REFERENCES db_computer_store.Jobs (job_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table db_computer_store.ComputerParts
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS db_computer_store.ComputerParts (
  product_id INT NOT NULL,
  branch_id INT NOT NULL,
  classification VARCHAR(50) NOT NULL,
  product_name VARCHAR(50) NOT NULL,
  description TEXT NOT NULL,
  stock INT NOT NULL,
  price DOUBLE NOT NULL,
  warranty_duration INT NOT NULL,
  PRIMARY KEY (product_id),
  INDEX branch_id_idx (branch_id ASC) VISIBLE,
  CONSTRAINT product_branch_ID
    FOREIGN KEY (branch_id)
    REFERENCES db_computer_store.Branches (branch_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table db_computer_store.ProductTransfers
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS db_computer_store.ProductTransfers (
  transfer_id INT NOT NULL,
  product_id INT NOT NULL,
  from_branch_id INT NOT NULL,
  to_branch_id INT NOT NULL,
  quantity INT NOT NULL,
  transfer_date DATE NOT NULL,
  person_in_charge_id BIGINT NOT NULL,
  PRIMARY KEY (transfer_id),
  INDEX from_branch_id_idx (from_branch_id ASC) VISIBLE,
  INDEX to_branch_id_idx (to_branch_id ASC) VISIBLE,
  INDEX product_id_idx (product_id ASC) VISIBLE,
  INDEX person_in_charge_id_idx (person_in_charge_id ASC) VISIBLE,
  CONSTRAINT from_branch_id
    FOREIGN KEY (from_branch_id)
    REFERENCES db_computer_store.Branches (branch_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT to_branch_id
    FOREIGN KEY (to_branch_id)
    REFERENCES db_computer_store.Branches (branch_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT product_id
    FOREIGN KEY (product_id)
    REFERENCES db_computer_store.ComputerParts (product_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT person_in_charge_id
    FOREIGN KEY (person_in_charge_id)
    REFERENCES db_computer_store.Employees (employee_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table db_computer_store.Customers
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS db_computer_store.Customers (
  customer_id INT NOT NULL,
  customer_lastname VARCHAR(50) NOT NULL,
  customer_firstname VARCHAR(50) NOT NULL,
  contact_number BIGINT NOT NULL,
  email_address VARCHAR(50) NOT NULL,
  shipping_address VARCHAR(250) NOT NULL,
  PRIMARY KEY (customer_id)
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table db_computer_store.Sales
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS db_computer_store.Sales (
  sales_id INT NOT NULL,
  branch_id INT NOT NULL,
  product_id INT NOT NULL,
  customer_id INT NOT NULL,
  quantity INT NOT NULL,
  price_per_item DOUBLE NOT NULL,
  total_cost DOUBLE NOT NULL,
  sale_date DATE NOT NULL,
  PRIMARY KEY (sales_id),
  INDEX branch_id_idx (branch_id ASC) VISIBLE,
  INDEX product_id_idx (product_id ASC) VISIBLE,
  INDEX customer_id_idx (customer_id ASC) VISIBLE,
  CONSTRAINT sales_branch_id
    FOREIGN KEY (branch_id)
    REFERENCES db_computer_store.Branches (branch_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT sales_product_id
    FOREIGN KEY (product_id)
    REFERENCES db_computer_store.ComputerParts (product_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT sales_customer_id
    FOREIGN KEY (customer_id)
    REFERENCES db_computer_store.Customers (customer_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table db_computer_store.SupportTickets
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS db_computer_store.SupportTickets (
  ticket_id INT NOT NULL,
  customer_id INT NOT NULL,
  sales_id INT NOT NULL,
  issue_description TEXT NOT NULL,
  ticket_status ENUM('ONGOING', 'CLOSED') NOT NULL,
  ticket_opened_date DATE NOT NULL,
  ticket_closed_date DATE NULL,
  PRIMARY KEY (ticket_id),
  INDEX customer_id_idx (customer_id ASC) VISIBLE,
  INDEX sales_id_idx (sales_id ASC) VISIBLE,
  CONSTRAINT support_customer_id
    FOREIGN KEY (customer_id)
    REFERENCES db_computer_store.Customers (customer_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT support_sales_id
    FOREIGN KEY (sales_id)
    REFERENCES db_computer_store.Sales (sales_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `db_computer_store`.`CustomerFeedback`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_computer_store`.`CustomerFeedback` (
  `feedback_id` INT NOT NULL,
  `sales_id` INT NOT NULL,
  `rating` INT NULL,
  `comments` TEXT NOT NULL,
  `feedback_date` DATE NULL,
  PRIMARY KEY (`feedback_id`, `comments`(255)),
  INDEX `sales_id_idx` (`sales_id` ASC) VISIBLE,
  CONSTRAINT `sales_id`
    FOREIGN KEY (`sales_id`)
    REFERENCES `db_computer_store`.`Sales` (`sales_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- SET SQL_MODE=@OLD_SQL_MODE;
-- SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
-- SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data Insert Statements
-- -----------------------------------------------------

SET FOREIGN_KEY_CHECKS = 0;

INSERT INTO db_computer_store.jobs (job_id, job_title)
VALUES
(1, 'Administrator'),
(2, 'Marketing Manager'),
(3, 'Employee'),
(4, 'Stock Manager'),
(5, 'Technician');

INSERT INTO db_computer_store.departments (department_id, department_name)
VALUES
(1, 'Sales'),
(2, 'Inventory'),
(3, 'Technical'),
(4, 'Marketing'),
(5, 'Customer Support');

INSERT INTO db_computer_store.customers (customer_id, customer_lastname, customer_firstname, contact_number, email_address, shipping_address) 
VALUES
(1, 'Rojo', 'VonMatthew', 9451234561, 'von_rojo@dlsu.edu.ph', '123 Mabini Street, Barangay 1, Malolos, Bulacan'),
(2, 'Granger', 'Hermione', 9451234562, 'HGranger@dlsu.edu.ph', '456 Rizal Avenue, Barangay San Vicente, Malabon City'),
(3, 'Everdeen', 'Primrose', 9451234563, 'PEverdeen@dlsu.edu.ph', '789 Bonifacio Drive, Barangay Batasan Hills, Quezon City'),
(4, 'Potter', 'Harry', 9451234564, 'HPotter@dlsu.edu.ph', '1011 Marcos Highway, Barangay San Isidro, Antipolo City'),
(5, 'Black', 'Sirius', 9451234565, 'SBlack@dlsu.edu.ph', '2220 EDSA, Barangay Magallanes, Makati City');

INSERT INTO db_computer_store.employees 
(`employee_id`, `employee_firstname`, `employee_lastname`, `branch_id`, `job_id`, `hire_date`, `department_id`)
VALUES
(1, 'Karl', 'Dela Cruz', 1, 1, '2004-02-01', 1),
(2, 'Jose', 'Espinosa', 2, 1, '2015-02-07', 2),    
(3, 'Mike', 'Tyson', 3, 3, '2015-05-06', 3), 
(4, 'Jake', 'Paul', 4, 3, '2015-06-10', 3),
(5, 'Logan', 'Paul', 5, 1, '2018-01-03', 5);

INSERT INTO db_computer_store.branches (branch_id, branch_name, location, contact_number, manager_id) VALUES
(1, 'Alabang', 'Lot 8 D-2 Unit C National Road Alabang Muntinlupa City Muntinlupa, Metro Manila Philippines', '9457505719', 1),
(2, 'Angeles', '111 MC ARTHUR HIGHWAY BALIBAGO, ANGELES CITY, PAMPANGA, REGION III (CENTRAL LUZON), 2009 Angeles City, Pampanga 2009 Philippines', '9615369354', 2),
(3, 'Bacoor', '248 Aguinaldo Hi-way, Brgy. Panapaan 4, Bacoor Cavite Bacoor, Cavite Philippines', '9369385787', 3),
(4, 'Fairview', 'Unit 3 to 5 Ground Floor Yaya Dub Apartelle Quirino Highway Greater Lagro Fairview Quezon City Quezon City, Metro Manila Philippines', '9773124803', 4),
(5, 'Makati', '427-B J.P. Rizal, cor Zapote, Makati, 1207 Metro Manila Makati, Metro Manila 1207 Philippines', '9171354641', 5),
(6, 'Malolos', 'JDR 2 Bldg, Km 43 MacArthur Hwy, Longos, Malolos, 3000 Bulacan Malolos, Bulacan Philippines', '9611740570', 1),
(7, 'Mandaluyong', 'CT CENTRE BUILDING, 520 SHAW BOULEVARD, BRGY. PLEASANT HILLS Mandaluyong City, CT CENTRE BUILDING, 520 SHAW BOULEVARD, BRGY. PLEASANT HILLS, MANDALUYONG CITY Philippines', '9671958571', 2),
(8, 'Manila', 'Unit B, 2071 ESPAŃA BLVD, corner Ibarra, Sampaloc, Manila, Metro Manila Manila, Metro Manila Philippines', '9671958488', 3),
(9, 'Marikina', '2nd Floor, Blk 26 Lot 17, Marcos Highway, Midtown Subdivision, Phase 3, San Roque Marikina City, Metro Manila 1801 Philippines', '9541541931', 4),
(10, 'Monumento', 'Unit CS202 Philtrust Bank Bldg., Samson Road, Brgy. 77, Caloocan City Caloocan City, Metro Manila Philippines', '9154785839', 5);

INSERT INTO db_computer_store.employeetransfers (emp_transfer_id, employee_id, new_branch_id, effective_date, new_department_id, new_job_id, reason) VALUES
(1, 3, 3, '2023-07-14', 3, 3, 'Department restructuring'),
(2, 4, 5, '2021-09-08', 4, 4, 'Project completion'),
(3, 3, 8, '2024-03-29', 2, 2, 'Skill development'),
(4, 5, 10, '2022-11-17', 3, 3, 'Career advancement'),
(5, 1, 1, '2020-01-26', 5, 2, 'Role redundancy'),
(6, 2, 2, '2023-05-06', 1, 3, 'New project assignment'),
(7, 5, 7, '2021-02-18', 3, 5, 'Relocation request'),
(8, 2, 5, '2024-10-13', 4, 1, 'Team expansion'),
(9, 1, 9, '2020-12-30', 5, 1, 'Cross-training opportunity'),
(10, 5, 5, '2022-04-20', 2, 3, 'Performance improvement');

INSERT INTO db_computer_store.computerparts (product_id, branch_id, classification, product_name, description, stock, price, warranty_duration) VALUES
(1, 4, 'GPU', 'GeForce RTX 3080', 'High-performance graphics card from NVIDIA, delivering exceptional 4K gaming and ray-tracing capabilities.', 150, 4395, 2),
(2, 3, 'RAM', 'Corsair Vengeance LPX 16GB', 'Reliable and high-performance DDR4 memory designed for gaming and multitasking with low-profile heat spreaders.', 78, 5435, 5),
(3, 7, 'STORAGE', 'Samsung 970 EVO Plus 1TB', 'Fast and efficient NVMe M.2 SSD, offering lightning-fast read/write speeds for faster boot times and load times.', 225, 2190.5, 1),
(4, 5, 'PSU', 'Corsair RM750x', '750W fully modular power supply with a high efficiency rating and quiet, durable operation for gaming PCs.', 340, 6780.25, 3),
(5, 9, 'MISC', 'NZXT H510', 'Mid-tower ATX case with tempered glass side panel, clean cable management, and efficient airflow for cooling.', 112, 1250.75, 4),
(6, 8, 'STORAGE', 'WD Black SN850 500GB', 'Ultra-fast PCIe Gen4 NVMe SSD, perfect for gamers and creatives seeking high-speed data access and reliability.', 56, 2100.3, 2),
(7, 4, 'MONITOR', 'LG UltraGear 27GL850', '27-inch IPS gaming monitor with a 144Hz refresh rate, 1ms response time, and NVIDIA G-Sync support for smooth gameplay.', 189, 9870.9, 3),
(8, 6, 'CASE', 'Fractal Design Meshify C', 'ATX mid-tower case with mesh front panel for superior airflow and sleek design for a clean PC build.', 90, 4320.6, 5),
(9, 1, 'STORAGE', 'Seagate Barracuda 2TB', 'Reliable 2TB HDD offering plenty of storage space for data, games, and media with fast read/write speeds.', 233, 1550.25, 1),
(10, 10, 'MISC', 'Redragon Kumara K552', 'Mechanical keyboard with RGB backlighting and tactile switches, designed for gaming with high durability.', 145, 3199.99, 4);

INSERT INTO db_computer_store.producttransfers
	(`transfer_id`, `product_id`, `from_branch_id`, `to_branch_id`, `quantity`, `transfer_date`, `person_in_charge_id`)
VALUES
	(1, 5, 1, 5, 6, '2024-11-17', 1),
	(2, 8, 1, 10, 1, '2024-8-24', 1),
	(3, 3, 2, 9, 5, '2024-1-23', 4),
	(4, 5, 3, 7, 2, '2024-04-05', 3),
	(5, 8, 4, 5, 5, '2024-11-04', 5),
	(6, 2, 5, 4, 4, '2024-11-03', 2),
	(7, 9, 7, 3, 4, '2023-10-31', 3),
	(8, 10, 9, 2, 1, '2023-3-09', 4),
	(9, 3, 10, 1, 2, '2023-05-17', 1),
	(10, 1, 5, 1, 2, '2023-12-14', 3);


INSERT INTO db_computer_store.sales
	(`sales_id`, `branch_id`, `product_id`, `customer_id`, `quantity`, `price_per_item`, `total_cost`, `sale_date`) 
VALUES 
    (1, 1, 1, 2, 2, 40, 80, '2024-11-04'),
    (2, 3, 2, 3, 5, 700, 3500, '2024-08-05'),
    (3, 5, 3, 4, 6, 80, 480, '2024-02-23'),
    (4, 7, 4, 5, 2, 440, 880, '2024-01-24'),
    (5, 9, 5, 1, 1, 4320, 4320, '2023-12-23');

INSERT INTO db_computer_store.supporttickets
	(`ticket_id`, `customer_id`, `sales_id`, `issue_description`, `ticket_status`, `ticket_opened_date`, `ticket_closed_date`) 
VALUES 
    (1, 1, 2, 'Broken screen', 'Ongoing', '2024-11-16', NULL),
    (2, 1, 2, 'Outlet issue', 'Closed', '2023-12-16', '2024-02-23'),
    (3, 1, 2, 'Wire bended', 'Ongoing', '2024-11-10', NULL),
    (4, 2, 3, 'Rusted nails', 'Closed', '2023-10-25', '2023-11-04'),
    (5, 2, 3, 'Motherboard malfunction', 'Closed', '2023-06-01', '2023-07-02'),
    (6, 2, 3, 'Wheel of mouse missing', 'Ongoing', '2024-11-15', NULL),
    (7, 3, 4, 'No nail included', 'Closed', '2024-01-04', '2024-01-05'),
    (8, 3, 4, 'Missing DVD', 'Closed', '2023-05-05', '2023-06-02'),
    (9, 4, 5, 'Missing wire', 'Closed', '2024-03-05', '2024-04-01'),
    (10, 4, 5, 'CPU damaged', 'Closed', '2024-05-12', '2024-05-16');

INSERT INTO `db_computer_store`.`customerfeedback` 
	(`feedback_id`, `sales_id`, `rating`, `comments`, `feedback_date`) 
VALUES 
	('1', '1', '5', 'Each specifications stated in product description works as expected. No flaws', '2024-11-06'),
	('2', '2', '3', 'Implementing RAM increases more frequency of Blue Screen of Death in my computer.', '2024-08-17'),
	('3', '3', '5', 'Samsung SSD 970 EVO Plus is less expensive and just as capable as its predecessor, making it an excellent choice for installation in a gaming rig or high-end PC upgrade.', '2024-02-25'),
	('4', '4', '5', 'Product has offered greater game quality experience as I do not experience any lags and crashes', '2024-01-30'),
	('5', '5', '2', 'Poor airflow (95C Ryzen 5600x with stock cooler under load), somewhat easy to use and cable manage.', '2023-12-25');

SET FOREIGN_KEY_CHECKS = 1;